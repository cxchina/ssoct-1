// Copyright (C) 1991-2010 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.


// Generated by Quartus II 64-Bit Version 9.1 (Build Build 350 03/24/2010)
// Created on Mon Mar 28 11:23:15 2011

fft_Aline fft_Aline_inst
(
	.clk(clk_sig) ,	// input  clk_sig
	.reset_n(reset_n_sig) ,	// input  reset_n_sig
	.inverse(inverse_sig) ,	// input  inverse_sig
	.sink_valid(sink_valid_sig) ,	// input  sink_valid_sig
	.sink_sop(sink_sop_sig) ,	// input  sink_sop_sig
	.sink_eop(sink_eop_sig) ,	// input  sink_eop_sig
	.sink_real(sink_real_sig) ,	// input [15:0] sink_real_sig
	.sink_imag(sink_imag_sig) ,	// input [15:0] sink_imag_sig
	.sink_error(sink_error_sig) ,	// input [1:0] sink_error_sig
	.source_ready(source_ready_sig) ,	// input  source_ready_sig
	.sink_ready(sink_ready_sig) ,	// output  sink_ready_sig
	.source_error(source_error_sig) ,	// output [1:0] source_error_sig
	.source_sop(source_sop_sig) ,	// output  source_sop_sig
	.source_eop(source_eop_sig) ,	// output  source_eop_sig
	.source_valid(source_valid_sig) ,	// output  source_valid_sig
	.source_exp(source_exp_sig) ,	// output [5:0] source_exp_sig
	.source_real(source_real_sig) ,	// output [15:0] source_real_sig
	.source_imag(source_imag_sig) 	// output [15:0] source_imag_sig
);

