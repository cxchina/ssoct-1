SYSTEM system
{
   System_Wizard_Version = "9.12";
   System_Wizard_Build = "350";
   Builder_Application = "sopc_builder_ca";
   WIZARD_SCRIPT_ARGUMENTS 
   {
      hdl_language = "verilog";
      device_family = "STRATIXIV";
      device_family_id = "STRATIXIV";
      generate_sdk = "0";
      do_build_sim = "0";
      hardcopy_compatible = "0";
      CLOCKS 
      {
         CLOCK clock_master
         {
            frequency = "50000000";
            source = "External";
            Is_Clock_Source = "0";
            display_name = "clock_master";
            pipeline = "0";
            clock_module_connection_point_for_c2h = "clock_master.clk";
         }
         CLOCK ddr2_phy_clk
         {
            frequency = "200000000";
            source = "";
            Is_Clock_Source = "1";
            display_name = "phy_clk from ddr2";
            pipeline = "0";
            clock_module_connection_point_for_c2h = "ddr2.sysclk";
         }
         CLOCK ddr2_phy_clk_out
         {
            frequency = "200000000";
            source = "ddr2_phy_clk";
            Is_Clock_Source = "0";
            display_name = "ddr2_phy_clk_out";
         }
         CLOCK ddr2_aux_full_rate_clk
         {
            frequency = "400000000";
            source = "";
            Is_Clock_Source = "1";
            display_name = "aux_full_rate_clk from ddr2";
            pipeline = "0";
            clock_module_connection_point_for_c2h = "ddr2.auxfull";
         }
         CLOCK ddr2_aux_full_rate_clk_out
         {
            frequency = "400000000";
            source = "ddr2_aux_full_rate_clk";
            Is_Clock_Source = "0";
            display_name = "ddr2_aux_full_rate_clk_out";
         }
         CLOCK ddr2_aux_half_rate_clk
         {
            frequency = "200000000";
            source = "";
            Is_Clock_Source = "1";
            display_name = "aux_half_rate_clk from ddr2";
            pipeline = "0";
            clock_module_connection_point_for_c2h = "ddr2.auxhalf";
         }
         CLOCK ddr2_aux_half_rate_clk_out
         {
            frequency = "200000000";
            source = "ddr2_aux_half_rate_clk";
            Is_Clock_Source = "0";
            display_name = "ddr2_aux_half_rate_clk_out";
         }
      }
      clock_freq = "50000000";
      clock_freq = "50000000";
      board_class = "";
      view_master_columns = "1";
      view_master_priorities = "0";
      generate_hdl = "";
      bustype_column_width = "0";
      clock_column_width = "80";
      do_log_history = "0";
      name_column_width = "75";
      desc_column_width = "75";
      base_column_width = "75";
      end_column_width = "75";
   }
   MODULE ddr2
   {
      PORT_WIRING 
      {
         PORT pll_ref_clk
         {
            type = "clk";
            width = "1";
            direction = "input";
            Is_Enabled = "1";
         }
         PORT soft_reset_n
         {
            type = "reset_n";
            width = "1";
            direction = "input";
            Is_Enabled = "1";
         }
         PORT aux_full_rate_clk
         {
            type = "out_clk";
            width = "1";
            direction = "output";
            Is_Enabled = "1";
         }
         PORT aux_half_rate_clk
         {
            type = "out_clk";
            width = "1";
            direction = "output";
            Is_Enabled = "1";
         }
         PORT mem_odt
         {
            type = "export";
            width = "1";
            direction = "output";
            Is_Enabled = "1";
            declare_one_bit_as_std_logic_vector = "1";
         }
         PORT mem_clk
         {
            type = "export";
            width = "2";
            direction = "inout";
            Is_Enabled = "1";
         }
         PORT mem_clk_n
         {
            type = "export";
            width = "2";
            direction = "inout";
            Is_Enabled = "1";
         }
         PORT mem_cs_n
         {
            type = "export";
            width = "1";
            direction = "output";
            Is_Enabled = "1";
            declare_one_bit_as_std_logic_vector = "1";
         }
         PORT mem_cke
         {
            type = "export";
            width = "1";
            direction = "output";
            Is_Enabled = "1";
            declare_one_bit_as_std_logic_vector = "1";
         }
         PORT mem_addr
         {
            type = "export";
            width = "14";
            direction = "output";
            Is_Enabled = "1";
         }
         PORT mem_ba
         {
            type = "export";
            width = "3";
            direction = "output";
            Is_Enabled = "1";
         }
         PORT mem_ras_n
         {
            type = "export";
            width = "1";
            direction = "output";
            Is_Enabled = "1";
         }
         PORT mem_cas_n
         {
            type = "export";
            width = "1";
            direction = "output";
            Is_Enabled = "1";
         }
         PORT mem_we_n
         {
            type = "export";
            width = "1";
            direction = "output";
            Is_Enabled = "1";
         }
         PORT mem_dq
         {
            type = "export";
            width = "64";
            direction = "inout";
            Is_Enabled = "1";
         }
         PORT mem_dqs
         {
            type = "export";
            width = "8";
            direction = "inout";
            Is_Enabled = "1";
         }
         PORT mem_dqsn
         {
            type = "export";
            width = "8";
            direction = "inout";
            Is_Enabled = "1";
         }
         PORT mem_dm
         {
            type = "export";
            width = "8";
            direction = "output";
            Is_Enabled = "1";
         }
         PORT local_refresh_ack
         {
            type = "export";
            width = "1";
            direction = "output";
            Is_Enabled = "1";
         }
         PORT local_wdata_req
         {
            type = "export";
            width = "1";
            direction = "output";
            Is_Enabled = "1";
         }
         PORT local_init_done
         {
            type = "export";
            width = "1";
            direction = "output";
            Is_Enabled = "1";
         }
         PORT reset_phy_clk_n
         {
            type = "export";
            width = "1";
            direction = "output";
            Is_Enabled = "1";
         }
         PORT oct_ctl_rs_value
         {
            type = "export";
            width = "14";
            direction = "input";
            Is_Enabled = "1";
         }
         PORT oct_ctl_rt_value
         {
            type = "export";
            width = "14";
            direction = "input";
            Is_Enabled = "1";
         }
         PORT dll_reference_clk
         {
            type = "export";
            width = "1";
            direction = "output";
            Is_Enabled = "1";
         }
         PORT dqs_delay_ctrl_export
         {
            type = "export";
            width = "6";
            direction = "output";
            Is_Enabled = "1";
         }
         PORT aux_scan_clk_reset_n
         {
            type = "export";
            width = "1";
            direction = "output";
            Is_Enabled = "1";
         }
         PORT aux_scan_clk
         {
            type = "export";
            width = "1";
            direction = "output";
            Is_Enabled = "1";
         }
         PORT global_reset_n
         {
            type = "export";
            width = "1";
            direction = "input";
            Is_Enabled = "1";
         }
      }
      SLAVE s1
      {
         PORT_WIRING 
         {
            PORT phy_clk
            {
               type = "out_clk";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT local_address
            {
               type = "address";
               width = "25";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT local_write_req
            {
               type = "write";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT local_read_req
            {
               type = "read";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT local_burstbegin
            {
               type = "beginbursttransfer";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT local_ready
            {
               type = "waitrequest_n";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT local_rdata
            {
               type = "readdata";
               width = "256";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT local_rdata_valid
            {
               type = "readdatavalid";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT local_wdata
            {
               type = "writedata";
               width = "256";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT local_be
            {
               type = "byteenable";
               width = "32";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT local_size
            {
               type = "burstcount";
               width = "3";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT reset_request_n
            {
               type = "resetrequest_n";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
         }
         SYSTEM_BUILDER_INFO 
         {
            Bus_Type = "avalon";
            Read_Wait_States = "peripheral_controlled";
            Write_Wait_States = "peripheral_controlled";
            Hold_Time = "0cycles";
            Setup_Time = "0cycles";
            Is_Printable_Device = "0";
            Address_Alignment = "dynamic";
            Well_Behaved_Waitrequest = "0";
            Is_Nonvolatile_Storage = "0";
            Address_Span = "1073741824";
            Read_Latency = "0";
            Is_Memory_Device = "1";
            Maximum_Pending_Read_Transactions = "32";
            Minimum_Uninterrupted_Run_Length = "1";
            Accepts_Internal_Connections = "1";
            Write_Latency = "0";
            Is_Flash = "0";
            Data_Width = "256";
            Address_Width = "25";
            Maximum_Burst_Size = "4";
            Register_Incoming_Signals = "0";
            Register_Outgoing_Signals = "0";
            Interleave_Bursts = "0";
            Linewrap_Bursts = "0";
            Burst_On_Burst_Boundaries_Only = "0";
            Always_Burst_Max_Burst = "0";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
            Clock_Source = "ddr2_phy_clk_out";
            Has_Clock = "1";
            MASTERED_BY clock_crossing/m1
            {
               priority = "1";
               Offset_Address = "0x00000000";
            }
            Base_Address = "0x00000000";
            Address_Group = "0";
         }
      }
      iss_model_name = "altera_memory";
      class = "ddr2_high_perf";
      WIZARD_SCRIPT_ARGUMENTS 
      {
         device_family = "Stratix IV";
         datawidth = "64";
         memtype = "DDR2 SDRAM";
         local_burst_length = "4";
         num_chipselects = "1";
         cas_latency = "6.0";
         addr_width = "14";
         ba_width = "3";
         row_width = "14";
         col_width = "10";
         clockspeed = "2500";
         data_width_ratio = "4";
         reg_dimm = "false";
         dq_per_dqs = "8";
         phy_if_type_afi = "true";
         ddrx = "true";
      }
      SYSTEM_BUILDER_INFO 
      {
         Instantiate_In_System_Module = "1";
         Is_Enabled = "1";
         Clock_Source = "clock_master";
         Has_Clock = "1";
         Default_Module_Name = "ddr2_sdram";
         Required_Device_Family = "STRATIXIIGXLITE,STRATIXIIGX,STRATIXII,STRATIXIII,CYCLONEIII,STINGRAY,STRATIXIV,ARRIAII,TARPON,HARDCOPYIII,HARDCOPYIV,CYCLONEIVE";
         Pins_Assigned_Automatically = "1";
         View 
         {
            MESSAGES 
            {
            }
         }
      }
      class_version = "8.1";
      SIMULATION 
      {
         DISPLAY 
         {
            SIGNAL a
            {
               name = "pll_ref_clk";
               radix = "hexadecimal";
               format = "Logic";
            }
            SIGNAL b
            {
               name = "soft_reset_n";
               radix = "hexadecimal";
               format = "Logic";
            }
            SIGNAL c
            {
               name = "global_reset_n";
               radix = "hexadecimal";
               format = "Logic";
            }
            SIGNAL d
            {
               name = "reset_phy_clk_n";
               radix = "hexadecimal";
               format = "Logic";
            }
            SIGNAL e
            {
               name = "reset_request_n";
               radix = "hexadecimal";
               format = "Logic";
            }
            SIGNAL f
            {
               name = "phy_clk";
               radix = "hexadecimal";
               format = "Logic";
            }
            SIGNAL g
            {
               name = "local_address";
               radix = "hexadecimal";
               format = "Logic";
            }
            SIGNAL h
            {
               name = "local_size";
               radix = "hexadecimal";
               format = "Logic";
            }
            SIGNAL i
            {
               name = "local_burstbegin";
               radix = "hexadecimal";
               format = "Logic";
            }
            SIGNAL j
            {
               name = "local_read_req";
               radix = "hexadecimal";
               format = "Logic";
            }
            SIGNAL k
            {
               name = "local_write_req";
               radix = "hexadecimal";
               format = "Logic";
            }
            SIGNAL l
            {
               name = "local_ready";
               radix = "hexadecimal";
               format = "Logic";
            }
            SIGNAL m
            {
               name = "local_wdata";
               radix = "hexadecimal";
               format = "Logic";
            }
            SIGNAL n
            {
               name = "local_be";
               radix = "hexadecimal";
               format = "Logic";
            }
            SIGNAL o
            {
               name = "local_rdata_valid";
               radix = "hexadecimal";
               format = "Logic";
            }
            SIGNAL p
            {
               name = "local_rdata";
               radix = "hexadecimal";
               format = "Logic";
            }
            SIGNAL q
            {
               name = "mem_clk";
               radix = "hexadecimal";
               format = "Logic";
            }
            SIGNAL r
            {
               name = "mem_cs_n";
               radix = "hexadecimal";
               format = "Logic";
            }
            SIGNAL s
            {
               name = "mem_addr";
               radix = "hexadecimal";
               format = "Logic";
            }
            SIGNAL t
            {
               name = "mem_ba";
               radix = "hexadecimal";
               format = "Logic";
            }
            SIGNAL u
            {
               name = "mem_ras_n";
               radix = "hexadecimal";
               format = "Logic";
            }
            SIGNAL v
            {
               name = "mem_cas_n";
               radix = "hexadecimal";
               format = "Logic";
            }
            SIGNAL w
            {
               name = "mem_we_n";
               radix = "hexadecimal";
               format = "Logic";
            }
            SIGNAL x
            {
               name = "mem_dm";
               radix = "hexadecimal";
               format = "Logic";
            }
            SIGNAL y
            {
               name = "mem_dq";
               radix = "hexadecimal";
               format = "Logic";
            }
            SIGNAL z
            {
               name = "mem_dqs";
               radix = "hexadecimal";
               format = "Logic";
            }
            SIGNAL aa
            {
               name = "mem_cke";
               radix = "hexadecimal";
               format = "Logic";
            }
         }
      }
   }
   MODULE master_read
   {
      MASTER avalon_master
      {
         PORT_WIRING 
         {
            PORT clk
            {
               type = "clk";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT reset
            {
               type = "reset";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT master_address
            {
               type = "address";
               width = "30";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT master_read
            {
               type = "read";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT master_byteenable
            {
               type = "byteenable";
               width = "4";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT master_readdata
            {
               type = "readdata";
               width = "32";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT master_readdatavalid
            {
               type = "readdatavalid";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT master_burstcount
            {
               type = "burstcount";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT master_waitrequest
            {
               type = "waitrequest";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
         }
         SYSTEM_BUILDER_INFO 
         {
            Bus_Type = "avalon";
            Is_Asynchronous = "0";
            DBS_Big_Endian = "0";
            Adapts_To = "";
            Do_Stream_Reads = "0";
            Do_Stream_Writes = "0";
            Max_Address_Width = "32";
            Data_Width = "32";
            Address_Width = "30";
            Maximum_Burst_Size = "1";
            Register_Incoming_Signals = "0";
            Register_Outgoing_Signals = "0";
            Interleave_Bursts = "0";
            Linewrap_Bursts = "0";
            Burst_On_Burst_Boundaries_Only = "0";
            Always_Burst_Max_Burst = "0";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
         }
         MEMORY_MAP 
         {
            Entry clock_crossing/s1
            {
               address = "0x00000000";
               span = "0x40000000";
               is_bridge = "1";
            }
            Entry ddr2/s1
            {
               address = "0x00000000";
               span = "0x40000000";
               is_bridge = "0";
            }
         }
      }
      PORT_WIRING 
      {
         PORT user_read_buffer
         {
            type = "export";
            width = "1";
            direction = "input";
            Is_Enabled = "1";
         }
         PORT user_buffer_output_data
         {
            type = "export";
            width = "32";
            direction = "output";
            Is_Enabled = "1";
         }
         PORT user_data_available
         {
            type = "export";
            width = "1";
            direction = "output";
            Is_Enabled = "1";
         }
         PORT control_fixed_location
         {
            type = "export";
            width = "1";
            direction = "input";
            Is_Enabled = "1";
         }
         PORT control_read_base
         {
            type = "export";
            width = "30";
            direction = "input";
            Is_Enabled = "1";
         }
         PORT control_read_length
         {
            type = "export";
            width = "30";
            direction = "input";
            Is_Enabled = "1";
         }
         PORT control_go
         {
            type = "export";
            width = "1";
            direction = "input";
            Is_Enabled = "1";
         }
         PORT control_done
         {
            type = "export";
            width = "1";
            direction = "output";
            Is_Enabled = "1";
         }
         PORT control_early_done
         {
            type = "export";
            width = "1";
            direction = "output";
            Is_Enabled = "1";
         }
      }
      class = "no_legacy_module";
      class_version = "7.080912";
      gtf_class_name = "master_template";
      gtf_class_version = "1.0";
      SYSTEM_BUILDER_INFO 
      {
         Do_Not_Generate = "1";
         Instantiate_In_System_Module = "1";
         Is_Bridge = "0";
         Is_Enabled = "1";
         Clock_Source = "clock_master";
         Has_Clock = "1";
         View 
         {
            MESSAGES 
            {
            }
         }
      }
      HDL_INFO 
      {
         Simulation_HDL_Files = "__PROJECT_DIRECTORY__/Avalon_MM-Master_Templates/custom_master.v,__PROJECT_DIRECTORY__/Avalon_MM-Master_Templates/burst_write_master.v,__PROJECT_DIRECTORY__/Avalon_MM-Master_Templates/burst_read_master.v,__PROJECT_DIRECTORY__/Avalon_MM-Master_Templates/write_master.v,__PROJECT_DIRECTORY__/Avalon_MM-Master_Templates/latency_aware_read_master.v,__PROJECT_DIRECTORY__/master_read.v";
      }
      WIZARD_SCRIPT_ARGUMENTS 
      {
      }
   }
   MODULE master_write
   {
      MASTER avalon_master
      {
         PORT_WIRING 
         {
            PORT clk
            {
               type = "clk";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT reset
            {
               type = "reset";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT master_address
            {
               type = "address";
               width = "30";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT master_write
            {
               type = "write";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT master_byteenable
            {
               type = "byteenable";
               width = "4";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT master_writedata
            {
               type = "writedata";
               width = "32";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT master_burstcount
            {
               type = "burstcount";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT master_waitrequest
            {
               type = "waitrequest";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
         }
         SYSTEM_BUILDER_INFO 
         {
            Bus_Type = "avalon";
            Is_Asynchronous = "0";
            DBS_Big_Endian = "0";
            Adapts_To = "";
            Do_Stream_Reads = "0";
            Do_Stream_Writes = "0";
            Max_Address_Width = "32";
            Data_Width = "32";
            Address_Width = "30";
            Maximum_Burst_Size = "1";
            Register_Incoming_Signals = "0";
            Register_Outgoing_Signals = "0";
            Interleave_Bursts = "0";
            Linewrap_Bursts = "0";
            Burst_On_Burst_Boundaries_Only = "0";
            Always_Burst_Max_Burst = "0";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
         }
         MEMORY_MAP 
         {
            Entry clock_crossing/s1
            {
               address = "0x00000000";
               span = "0x40000000";
               is_bridge = "1";
            }
            Entry ddr2/s1
            {
               address = "0x00000000";
               span = "0x40000000";
               is_bridge = "0";
            }
         }
      }
      PORT_WIRING 
      {
         PORT user_write_buffer
         {
            type = "export";
            width = "1";
            direction = "input";
            Is_Enabled = "1";
         }
         PORT user_buffer_input_data
         {
            type = "export";
            width = "32";
            direction = "input";
            Is_Enabled = "1";
         }
         PORT user_buffer_full
         {
            type = "export";
            width = "1";
            direction = "output";
            Is_Enabled = "1";
         }
         PORT control_fixed_location
         {
            type = "export";
            width = "1";
            direction = "input";
            Is_Enabled = "1";
         }
         PORT control_write_base
         {
            type = "export";
            width = "30";
            direction = "input";
            Is_Enabled = "1";
         }
         PORT control_write_length
         {
            type = "export";
            width = "30";
            direction = "input";
            Is_Enabled = "1";
         }
         PORT control_go
         {
            type = "export";
            width = "1";
            direction = "input";
            Is_Enabled = "1";
         }
         PORT control_done
         {
            type = "export";
            width = "1";
            direction = "output";
            Is_Enabled = "1";
         }
      }
      class = "no_legacy_module";
      class_version = "7.080912";
      gtf_class_name = "master_template";
      gtf_class_version = "1.0";
      SYSTEM_BUILDER_INFO 
      {
         Do_Not_Generate = "1";
         Instantiate_In_System_Module = "1";
         Is_Bridge = "0";
         Is_Enabled = "1";
         Clock_Source = "clock_master";
         Has_Clock = "1";
         View 
         {
            MESSAGES 
            {
            }
         }
      }
      HDL_INFO 
      {
         Simulation_HDL_Files = "__PROJECT_DIRECTORY__/Avalon_MM-Master_Templates/custom_master.v,__PROJECT_DIRECTORY__/Avalon_MM-Master_Templates/burst_write_master.v,__PROJECT_DIRECTORY__/Avalon_MM-Master_Templates/burst_read_master.v,__PROJECT_DIRECTORY__/Avalon_MM-Master_Templates/write_master.v,__PROJECT_DIRECTORY__/Avalon_MM-Master_Templates/latency_aware_read_master.v,__PROJECT_DIRECTORY__/master_write.v";
      }
      WIZARD_SCRIPT_ARGUMENTS 
      {
      }
   }
   MODULE clock_crossing
   {
      SLAVE s1
      {
         PORT_WIRING 
         {
            PORT slave_clk
            {
               type = "clk";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT slave_reset_n
            {
               type = "reset_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT slave_address
            {
               type = "address";
               width = "28";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT slave_nativeaddress
            {
               type = "nativeaddress";
               width = "28";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT slave_read
            {
               type = "read";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT slave_write
            {
               type = "write";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT slave_writedata
            {
               type = "writedata";
               width = "32";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT slave_readdata
            {
               type = "readdata";
               width = "32";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT slave_readdatavalid
            {
               type = "readdatavalid";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT slave_waitrequest
            {
               type = "waitrequest";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT slave_byteenable
            {
               type = "byteenable";
               width = "4";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT slave_burstcount
            {
               type = "burstcount";
               width = "2";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT slave_endofpacket
            {
               Is_Enabled = "1";
               direction = "output";
               type = "endofpacket";
               width = "1";
            }
         }
         SYSTEM_BUILDER_INFO 
         {
            Bus_Type = "avalon";
            Read_Wait_States = "peripheral_controlled";
            Write_Wait_States = "peripheral_controlled";
            Hold_Time = "0cycles";
            Setup_Time = "0cycles";
            Is_Printable_Device = "0";
            Address_Alignment = "dynamic";
            Well_Behaved_Waitrequest = "0";
            Is_Nonvolatile_Storage = "0";
            Address_Span = "1073741824";
            Read_Latency = "0";
            Is_Memory_Device = "0";
            Maximum_Pending_Read_Transactions = "66";
            Minimum_Uninterrupted_Run_Length = "1";
            Accepts_Internal_Connections = "1";
            Write_Latency = "0";
            Is_Flash = "0";
            Data_Width = "32";
            Address_Width = "28";
            Opaque_Bridges_To = "m1";
            Maximum_Burst_Size = "2";
            Register_Incoming_Signals = "0";
            Register_Outgoing_Signals = "0";
            Interleave_Bursts = "0";
            Linewrap_Bursts = "0";
            Burst_On_Burst_Boundaries_Only = "0";
            Always_Burst_Max_Burst = "0";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
            Clock_Source = "clock_master";
            Has_Clock = "1";
            MASTERED_BY master_read/avalon_master
            {
               priority = "1";
               Offset_Address = "0x00000000";
            }
            MASTERED_BY master_write/avalon_master
            {
               priority = "1";
               Offset_Address = "0x00000000";
            }
            Base_Address = "0x00000000";
            Address_Group = "0";
         }
      }
      MASTER m1
      {
         PORT_WIRING 
         {
            PORT master_clk
            {
               type = "clk";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT master_reset_n
            {
               type = "reset_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT master_address
            {
               type = "address";
               width = "30";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT master_nativeaddress
            {
               type = "nativeaddress";
               width = "28";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT master_read
            {
               type = "read";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT master_write
            {
               type = "write";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT master_writedata
            {
               type = "writedata";
               width = "32";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT master_readdata
            {
               type = "readdata";
               width = "32";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT master_readdatavalid
            {
               type = "readdatavalid";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT master_waitrequest
            {
               type = "waitrequest";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT master_byteenable
            {
               type = "byteenable";
               width = "4";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT master_burstcount
            {
               type = "burstcount";
               width = "2";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT master_endofpacket
            {
               Is_Enabled = "1";
               direction = "input";
               type = "endofpacket";
               width = "1";
            }
         }
         SYSTEM_BUILDER_INFO 
         {
            Bus_Type = "avalon";
            Is_Asynchronous = "0";
            DBS_Big_Endian = "0";
            Adapts_To = "";
            Do_Stream_Reads = "0";
            Do_Stream_Writes = "0";
            Max_Address_Width = "32";
            Data_Width = "32";
            Address_Width = "30";
            Opaque_Bridges_To = "s1";
            Maximum_Burst_Size = "2";
            Register_Incoming_Signals = "0";
            Register_Outgoing_Signals = "0";
            Interleave_Bursts = "0";
            Linewrap_Bursts = "0";
            Burst_On_Burst_Boundaries_Only = "0";
            Always_Burst_Max_Burst = "0";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
            Clock_Source = "ddr2_phy_clk_out";
            Has_Clock = "1";
         }
         MEMORY_MAP 
         {
            Entry ddr2/s1
            {
               address = "0x00000000";
               span = "0x40000000";
               is_bridge = "0";
            }
         }
      }
      class = "altera_avalon_clock_crossing";
      class_version = "7.080912";
      iss_model_name = "altera_avalon_clock_crossing";
      WIZARD_SCRIPT_ARGUMENTS 
      {
         Upstream_FIFO_Depth = "512";
         Downstream_FIFO_Depth = "16";
         Data_Width = "32";
         Native_Address_Width = "28";
         Use_Byte_Enable = "1";
         Use_Burst_Count = "1";
         Maximum_Burst_Size = "2";
         Upstream_Use_Register = "0";
         Downstream_Use_Register = "0";
         Slave_Synchronizer_Depth = "3";
         Master_Synchronizer_Depth = "3";
         Device_Family = "STRATIXIV";
      }
      SYSTEM_BUILDER_INFO 
      {
         Instantiate_In_System_Module = "1";
         Is_Enabled = "1";
         Top_Level_Ports_Are_Enumerated = "1";
         Has_Clock = "0";
         Is_Bridge = "1";
         View 
         {
            MESSAGES 
            {
            }
         }
      }
      HDL_INFO 
      {
         Precompiled_Simulation_Library_Files = "";
         Simulation_HDL_Files = "";
         Synthesis_HDL_Files = "__PROJECT_DIRECTORY__/clock_crossing.v";
         Synthesis_Only_Files = "";
      }
      PORT_WIRING 
      {
      }
   }
}
