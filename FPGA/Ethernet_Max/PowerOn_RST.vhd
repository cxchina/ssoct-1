-- WARNING: Do NOT edit the input and output ports in this file in a text
-- editor if you plan to continue editing the block that represents it in
-- the Block Editor! File corruption is VERY likely to occur.

-- Copyright (C) 1991-2008 Altera Corporation
-- Your use of Altera Corporation's design tools, logic functions 
-- and other software and tools, and its AMPP partner logic 
-- functions, and any output files from any of the foregoing 
-- (including device programming or simulation files), and any 
-- associated documentation or information are expressly subject 
-- to the terms and conditions of the Altera Program License 
-- Subscription Agreement, Altera MegaCore Function License 
-- Agreement, or other applicable license agreement, including, 
-- without limitation, that your use is for the sole purpose of 
-- programming logic devices manufactured by Altera and sold by 
-- Altera or its authorized distributors.  Please refer to the 
-- applicable agreement for further details.


-- Generated by Quartus II Version 8.0 (Build Build 215 05/29/2008)
-- Created on Wed Sep 10 16:49:23 2008

LIBRARY ieee;
USE ieee.std_logic_1164.all;


--  Entity Declaration

ENTITY PowerOn_RST IS
	-- {{ALTERA_IO_BEGIN}} DO NOT REMOVE THIS LINE!
	PORT
	(
		clk : IN STD_LOGIC;
		RSTnCPU : IN STD_LOGIC;
		RSTn : OUT STD_LOGIC	
	);
	-- {{ALTERA_IO_END}} DO NOT REMOVE THIS LINE!
	
END PowerOn_RST;


--  Architecture Body

ARCHITECTURE PowerOn_RST_architecture OF PowerOn_RST IS
	
	SIGNAL state : STD_LOGIC := '0';
	SIGNAL compteur : INTEGER RANGE 1 TO 1000001 := 1;
	
BEGIN

PROCESS(RSTnCPU, clk)

BEGIN

	IF RSTnCPU = '0' THEN
		compteur <= 1;
		state <= '0';
	ELSIF (clk'EVENT AND clk = '1') THEN
		CASE state IS
			WHEN '0' =>
				compteur <= compteur + 1;
				IF compteur >= 1000000 THEN 	--Reset d'environ 20ms pour clock = 50 MHz
					compteur <= 1;
					state <= '1';
				ELSE	
					state <= '0';
				END IF;
								
			WHEN '1' =>
				state <= '1';
				
			WHEN OTHERS =>
				state <= '0';
		END CASE;	
					
	END IF;
		
END PROCESS;

RSTn <= state;

END PowerOn_RST_architecture;
